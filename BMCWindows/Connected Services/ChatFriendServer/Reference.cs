//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMCWindows.ChatFriendServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Results")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.ChatFriendServer.ChatFriendResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.ChatFriendServer.MessageFriendDTO[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.ChatFriendServer.MessageFriendDTO))]
    public partial class OperationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorKey {
            get {
                return this.ErrorKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorKeyField, value) != true)) {
                    this.ErrorKeyField = value;
                    this.RaisePropertyChanged("ErrorKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatFriendResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Utilities.Results")]
    [System.SerializableAttribute()]
    public partial class ChatFriendResponse : BMCWindows.ChatFriendServer.OperationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BMCWindows.ChatFriendServer.MessageFriendDTO[] MessagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMCWindows.ChatFriendServer.MessageFriendDTO[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageFriendDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageFriendDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverUsername {
            get {
                return this.ReceiverUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverUsernameField, value) != true)) {
                    this.ReceiverUsernameField = value;
                    this.RaisePropertyChanged("ReceiverUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderUsername {
            get {
                return this.SenderUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderUsernameField, value) != true)) {
                    this.SenderUsernameField = value;
                    this.RaisePropertyChanged("SenderUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatFriendServer.IChatFriendService", CallbackContract=typeof(BMCWindows.ChatFriendServer.IChatFriendServiceCallback))]
    public interface IChatFriendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatFriendService/SendMessageToFriend", ReplyAction="http://tempuri.org/IChatFriendService/SendMessageToFriendResponse")]
        BMCWindows.ChatFriendServer.OperationResponse SendMessageToFriend(string senderUsername, string receiverUsername, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatFriendService/SendMessageToFriend", ReplyAction="http://tempuri.org/IChatFriendService/SendMessageToFriendResponse")]
        System.Threading.Tasks.Task<BMCWindows.ChatFriendServer.OperationResponse> SendMessageToFriendAsync(string senderUsername, string receiverUsername, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatFriendService/GetChatHistory", ReplyAction="http://tempuri.org/IChatFriendService/GetChatHistoryResponse")]
        BMCWindows.ChatFriendServer.ChatFriendResponse GetChatHistory(string username1, string username2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatFriendService/GetChatHistory", ReplyAction="http://tempuri.org/IChatFriendService/GetChatHistoryResponse")]
        System.Threading.Tasks.Task<BMCWindows.ChatFriendServer.ChatFriendResponse> GetChatHistoryAsync(string username1, string username2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatFriendServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatFriendService/ReceiveMessage")]
        void ReceiveMessage(string sender, string receiver, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatFriendServiceChannel : BMCWindows.ChatFriendServer.IChatFriendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatFriendServiceClient : System.ServiceModel.DuplexClientBase<BMCWindows.ChatFriendServer.IChatFriendService>, BMCWindows.ChatFriendServer.IChatFriendService {
        
        public ChatFriendServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatFriendServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatFriendServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatFriendServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatFriendServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public BMCWindows.ChatFriendServer.OperationResponse SendMessageToFriend(string senderUsername, string receiverUsername, string message) {
            return base.Channel.SendMessageToFriend(senderUsername, receiverUsername, message);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.ChatFriendServer.OperationResponse> SendMessageToFriendAsync(string senderUsername, string receiverUsername, string message) {
            return base.Channel.SendMessageToFriendAsync(senderUsername, receiverUsername, message);
        }
        
        public BMCWindows.ChatFriendServer.ChatFriendResponse GetChatHistory(string username1, string username2) {
            return base.Channel.GetChatHistory(username1, username2);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.ChatFriendServer.ChatFriendResponse> GetChatHistoryAsync(string username1, string username2) {
            return base.Channel.GetChatHistoryAsync(username1, username2);
        }
    }
}
