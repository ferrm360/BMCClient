//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BMCWindows.FriendServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Results")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.FriendServer.FriendListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.FriendServer.PlayerDTO[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BMCWindows.FriendServer.PlayerDTO))]
    public partial class OperationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorKey {
            get {
                return this.ErrorKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorKeyField, value) != true)) {
                    this.ErrorKeyField = value;
                    this.RaisePropertyChanged("ErrorKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendListResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Utilities.Results")]
    [System.SerializableAttribute()]
    public partial class FriendListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BMCWindows.FriendServer.PlayerDTO[] FriendsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorKey {
            get {
                return this.ErrorKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorKeyField, value) != true)) {
                    this.ErrorKeyField = value;
                    this.RaisePropertyChanged("ErrorKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BMCWindows.FriendServer.PlayerDTO[] Friends {
            get {
                return this.FriendsField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendsField, value) != true)) {
                    this.FriendsField = value;
                    this.RaisePropertyChanged("Friends");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerDTO", Namespace="http://schemas.datacontract.org/2004/07/Service.DTO")]
    [System.SerializableAttribute()]
    public partial class PlayerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FriendServer.IFriendshipService")]
    public interface IFriendshipService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/SendFriendRequest", ReplyAction="http://tempuri.org/IFriendshipService/SendFriendRequestResponse")]
        BMCWindows.FriendServer.OperationResponse SendFriendRequest(string senderUsername, string reciveUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/SendFriendRequest", ReplyAction="http://tempuri.org/IFriendshipService/SendFriendRequestResponse")]
        System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> SendFriendRequestAsync(string senderUsername, string reciveUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendshipService/AcceptFriendRequestResponse")]
        BMCWindows.FriendServer.OperationResponse AcceptFriendRequest(int idRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendshipService/AcceptFriendRequestResponse")]
        System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> AcceptFriendRequestAsync(int idRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/RejectFriendResponse", ReplyAction="http://tempuri.org/IFriendshipService/RejectFriendResponseResponse")]
        BMCWindows.FriendServer.OperationResponse RejectFriendResponse(int idResponse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/RejectFriendResponse", ReplyAction="http://tempuri.org/IFriendshipService/RejectFriendResponseResponse")]
        System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> RejectFriendResponseAsync(int idResponse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/GetFriendList", ReplyAction="http://tempuri.org/IFriendshipService/GetFriendListResponse")]
        BMCWindows.FriendServer.FriendListResponse GetFriendList(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/GetFriendList", ReplyAction="http://tempuri.org/IFriendshipService/GetFriendListResponse")]
        System.Threading.Tasks.Task<BMCWindows.FriendServer.FriendListResponse> GetFriendListAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/GetFriendRequestList", ReplyAction="http://tempuri.org/IFriendshipService/GetFriendRequestListResponse")]
        BMCWindows.FriendServer.OperationResponse GetFriendRequestList(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/GetFriendRequestList", ReplyAction="http://tempuri.org/IFriendshipService/GetFriendRequestListResponse")]
        System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> GetFriendRequestListAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/TestConnection", ReplyAction="http://tempuri.org/IFriendshipService/TestConnectionResponse")]
        string TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipService/TestConnection", ReplyAction="http://tempuri.org/IFriendshipService/TestConnectionResponse")]
        System.Threading.Tasks.Task<string> TestConnectionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendshipServiceChannel : BMCWindows.FriendServer.IFriendshipService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendshipServiceClient : System.ServiceModel.ClientBase<BMCWindows.FriendServer.IFriendshipService>, BMCWindows.FriendServer.IFriendshipService {
        
        public FriendshipServiceClient() {
        }
        
        public FriendshipServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendshipServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BMCWindows.FriendServer.OperationResponse SendFriendRequest(string senderUsername, string reciveUsername) {
            return base.Channel.SendFriendRequest(senderUsername, reciveUsername);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> SendFriendRequestAsync(string senderUsername, string reciveUsername) {
            return base.Channel.SendFriendRequestAsync(senderUsername, reciveUsername);
        }
        
        public BMCWindows.FriendServer.OperationResponse AcceptFriendRequest(int idRequest) {
            return base.Channel.AcceptFriendRequest(idRequest);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> AcceptFriendRequestAsync(int idRequest) {
            return base.Channel.AcceptFriendRequestAsync(idRequest);
        }
        
        public BMCWindows.FriendServer.OperationResponse RejectFriendResponse(int idResponse) {
            return base.Channel.RejectFriendResponse(idResponse);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> RejectFriendResponseAsync(int idResponse) {
            return base.Channel.RejectFriendResponseAsync(idResponse);
        }
        
        public BMCWindows.FriendServer.FriendListResponse GetFriendList(string username) {
            return base.Channel.GetFriendList(username);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.FriendServer.FriendListResponse> GetFriendListAsync(string username) {
            return base.Channel.GetFriendListAsync(username);
        }
        
        public BMCWindows.FriendServer.OperationResponse GetFriendRequestList(string username) {
            return base.Channel.GetFriendRequestList(username);
        }
        
        public System.Threading.Tasks.Task<BMCWindows.FriendServer.OperationResponse> GetFriendRequestListAsync(string username) {
            return base.Channel.GetFriendRequestListAsync(username);
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
    }
}
